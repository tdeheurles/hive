docker:
  help: manage your local containers
  commands:
    cli:
      help: run docker commands (for windows/mac, the commands are passed directly to the docker client of the VM, fixing some issues)
      type: code
      parameters:
        - name: "parameters"
          help: "the command to run"
          nargs: "..."
    remove_working_directory:
      help: stop and remove all container linked to the hive working_directory volume
      type: code

gcloud:
  help: interact with the google cloud plateform
  commands:
    cli:
      help: run the gcloud CLI
      type: code
      parameters:
        - name: "parameters"
          help: "the command to run with gcloud CLI"
          nargs: "..."
    init:
      help: setup the user account and project
      type: code
    set_cluster:
      help: get the project credentials
      type: code
      parameters:
        - name: "cluster"
          help: "the name of the cluster to get the credentials"
    create_cluster:
      help: create a GoogleContainerEngine cluster
      type: code
      parameters:
        - name: "name"
          help: "the name of your cluster"
        - name: "zone"
          help: "the google zone for your cluster, run --show parameter to see availables onces"
        - name: "type"
          help: "the kind of machine you want to use, run --show to see availables onces"
        - name: "--quantity"
          help: "set the number of node for the cluster, default to 1"
    show:
      help: return the available zones and machines-types before existing
      type: code
    autoscale:
      help: update a cluster configuration
      type: code
      parameters:
        - name: "name"
          help: "the cluster to update"
        - name: "target"
          help: "the CPU percentage gcloud will target (switch autoscale on), 0.75 for 75/100"
        - name: "max"
          help: "maximun number of node"
        - name: "cd"
          help: "cooldown period before auoscaler monitor a new instance (in seconds)"
    delete:
      help: delete a cluster
      type: code
      parameters:
        - name: "name"
          help: "the cluster to delete"

kubernetes:
  help: see or manipulate kubernetes resources
  commands:
    status:
      help: get the cluster resources
      type: code
      parameters:
        - name: "namespace"
          help: "the namespace from which to get resources"
    namespaces:
      help: some help
      type: code
    deploy:
      help: deploy an application
      type: code
      parameters:
        - name: "hive_file"
          help: "the path to your hive file directory"
        - name: "environment"
          help: "the name of the environment where you want to deploy your application"
        - name: "build"
          help: "the build identifiant that you want to deploy"
        - name: "--notty"
          help: "remove tty when docker run is used in script"
          action: "store_const"
    create_environment:
      help: generate a new environment
      type: code
      parameters:
        - name: "name"
          help: "the name of the environment"
        - name: "--project"
          help: "A label to point to the project"
        - name: "--subproject"
          help: "A label to point to a sub-categorie"
        - name: "--notty"
          help: "remove tty when docker run is used in script"
          action: "store_const"
    delete:
      help: delete an environment
      type: code
      parameters:
        - name: "name"
          help: "the name of the environment to delete"
        - name: "--notty"
          help: "remove tty when docker run is used in script"
          action: "store_const"
    cli:
      help: run kubectl commands
      type: code
      parameters:
        - name: "parameters"
          help: "the command to run with kubectl (the kubernetes CLI)"
          nargs: "..."
        - name: "--notty"
          help: "remove tty when docker run is used in script"
          action: "store_const"
    scale:
      help: scale a service in a given namespace
      type: code
      parameters:
        - name: "namespace"
          help: "the environment where is running the container"
        - name: "service"
          help: "the service to scale"
        - name: "count"
          help: "the target count for the service"
        - name: "--notty"
          help: "remove tty when docker run is used in script"
          action: "store_const"
    testtools:
      help: start a test/debug service and connect to in it
      type: code
      parameters:
        - name: "namespace"
          help: "the environment where to start the testtool"
        - name: "--notty"
          help: "remove tty when docker run is used in script"
          action: "store_const"

certificate:
  help: certificates manager
  commands:
    create_ssl:
      help: generate self-sign key and certificate
      type: code
      parameters:
        - name: "domain"
          help: "the domain name of your certificate"
        - name: "path"
          help: "the path to the folder where you want to ouput the certificates"

do:
  help: template commands
  commands:
    build:
      help: build project or subproject
      type: code
      parameters:
        - name: hive_file
          help: the path from hive script to the hive file folder
        - name: subprojects
          help: the subproject you want to build. For multiple subprojects, separate them by a comma. You can also use _all_ to build all subprojects.
        - name: parameters
          help: the parameters for the build (do not give parameters to have instructions)
          nargs: "..."
    run:
      help: run locally a project or subproject
      type: code
      parameters:
        - name: hive_file
          help: the path from hive script to the hive file folder
        - name: subprojects
          help: the subproject you want to run. For multiple subprojects, separate them by a comma. You can also use _all_ to run all subprojects.
        - name: parameters
          help: the parameters to run the subprojects (do not give parameters to have instructions)
          nargs: "..."
    kill:
      help: run locally a project or subproject
      type: code
      parameters:
        - name: hive_file
          help: the path from hive script to the hive file folder
        - name: subprojects
          help: the subproject you want to kill. For multiple subprojects, separate them by a comma. You can also use _all_ to kill all subprojects.
        - name: parameters
          help: the parameters to run the subprojects (do not give parameters to have instructions)
          nargs: "..."
    push:
      help: push a subproject containers
      type: code
      parameters:
        - name: hive_file
          help: the path from hive script to the hive file folder
        - name: subprojects
          help: the subproject you want to kill. For multiple subprojects, separate them by a comma. You can also use _all_ to kill all subprojects.
        - name: parameters
          help: the parameters to run the subprojects (do not give parameters to have instructions)
          nargs: "..."
    test:
      help: ...
      type: code
      parameters:
        - name: parameters
          help: the parameters to run the subprojects (do not give parameters to have instructions)
          nargs: "..."
template:
  help: generate folder and files
  commands:
    docker:
      help: create script to build, run and kill your containers locally
      type: code
      parameters:
        - name:   hive_file
          help:   the path to your folder where to create the subproject (from hive script)
        - name:   name
          help:   the name of the project
        - name:   --build
          help:   add this option to create the build action
          action: "store_const"
        - name:   --local
          help:   add this option to create the run and kill actions
          action: "store_const"
    kubernetes:
      help: generate kubernetes manifests
      type: code
      parameters:
        - name:   hive_file
          help:   the path to your folder where to create the subproject (from hive script)
        - name:   name
          help:   the name of the project
        - name:   --rc
          help:   add this option to create the replication controller manifest
          action: "store_const"
        - name:   --svc
          help:   add this option to create the service manifest
          action: "store_const"
        - name:   --sct
          help:   add this option to create the secret manifest
          action: "store_const"
    init:
      help: initiate a new project
      type: code
      parameters:
        - name: project
          help: the name of your project
        - name: --maintainer
          help: the name/address of the maintainer
        - name: --folder
          help: where to genereate the hive.yml and the subproject folder

local_cluster:
  help: manage a local kubernetes cluster run on containers
  commands:
    create:
      help: start a local kubernetes cluster
      type: code
      parameters:
        - name: docker_host
          help: The docker host, for docker-toolbox use something like 192.168.99.100, for linux use localhost
        - name: --version
          help: kubernetes version in the form v1.1.8
        - name: --port
          help: the port you want for the apiserver. default is 8080
    start_addons:
      help: start the addons for your cluster (DNS, Dashboard, ...)
      type: code
      parameters:
        - name: --port
          help: the port of the apiserver. default is 8080
    proxy:
      help: start a proxy for your local kubernetes cluster
      type: code
      parameters:
        - name: hostport
          help: the port you want to access on the host
        - name: containerport
          help: the port of the container you want to proxy
        - name: serviceip
          help: the ip of the service to proxy. Run "./hive kubernetes status namespace> to see the details of your services.
        - name: method
          help: the method you want to proxy http or ws
